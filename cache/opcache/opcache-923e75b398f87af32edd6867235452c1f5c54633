<?php $exp = 1732161366; $val = array (
  'domain' => NULL,
  'plural-forms' => 'nplurals=2; plural=n != 1;',
  'messages' => 
  array (
    '' => 
    array (
      'admin.systemInfo.settingName' => 'Setting Name',
      'admin.systemInfo.settingValue' => 'Setting Value',
      'admin.adminFunctions' => 'Administrative Functions',
      'admin.deleteCache' => 'Delete Caches',
      'admin.deleteCache.description' => 'Delete cache files from the system. This should only be done in development environments.',
      'admin.clearDataCache' => 'Delete Data Caches',
      'admin.clearTemplateCache' => 'Delete Template Cache',
      'admin.configFileUpdatedInstructions' => 'Your configuration file has been successfully updated. Please note that if your site no longer functions correctly you may need to manually fix your configuration by editing <tt>config.inc.php</tt> directly.',
      'admin.confirmClearTemplateCache' => 'Are you sure you want to clear the cache of compiled templates?',
      'admin.confirmExpireSessions' => 'Are you sure you want to expire all user sessions? All users who are currently logged into the system will be forced to log in again (yourself included).',
      'admin.contentsOfConfigFile' => 'Contents of configuration file',
      'admin.contexts.confirmDelete' => 'Are you sure you want to permanently delete {$contextName} and all of its contents?',
      'admin.currentVersion' => 'Current version',
      'admin.dateInstalled' => 'Date installed',
      'admin.displayConfigFileInstructions' => 'The contents of your updated configuration are displayed below. To apply the configuration changes you must open <tt>config.inc.php</tt> in a suitable text editor and replace its contents with the contents of the text field below.',
      'admin.displayNewSystemConfig' => 'Display New Configuration',
      'admin.expireSessions' => 'Expire User Sessions',
      'admin.expireSessions.description' => 'All users will be immediately logged out of the application, including you, and will need to login again.',
      'admin.languages.cantDisable' => 'This locale is the primary language of the site. You can\'t disable it until you choose another primary locale.',
      'admin.languages.confirmSitePrimaryLocaleChange' => 'Are you sure you want to change the site primary locale? Users\' names, which are required in the site\'s primary locale, will be copied from the existing primary locale where they are missing.',
      'admin.languages.confirmReload' => 'Are you sure you want to reload this locale? This will erase any existing locale-specific data such as customized email templates.',
      'admin.languages.installedLocales' => 'Installed Locales',
      'admin.languages.installLanguages' => 'Manage Locales',
      'admin.languages.availableLocales' => 'Available Locales',
      'admin.languages.installLocale' => 'Install Locale',
      'admin.languages.installLocales' => 'Install',
      'admin.languages.installNewLocales' => 'Install New Locales',
      'admin.languages.languageSettings' => 'Language Settings',
      'admin.languages.noLocalesAvailable' => 'No additional locales are available for installation.',
      'admin.languages.reload' => 'Reload Locale',
      'admin.languages.uninstall' => 'Uninstall Locale',
      'admin.phpInfo' => 'Extended PHP Information',
      'admin.scheduledTask' => 'Scheduled task',
      'admin.scheduledTask.startTime' => 'Task process started.',
      'admin.scheduledTask.stopTime' => 'Task process stopped.',
      'admin.scheduledTask.noLog' => 'Task produced no log.',
      'admin.scheduledTask.depositDois' => 'Deposit DOIs with configured registration agency',
      'admin.scheduledTask.downloadLog' => 'Your {$softwareName} installation automatically executed and finished this task and you can download the log file here: {$url}',
      'admin.scheduledTask.editorialReminder' => 'Send an email to each editor reminding them of their outstanding tasks',
      'admin.scheduledTask.editorialReminder.logStart' => 'Identifying editors to remind in context {$contextId}',
      'admin.scheduledTask.editorialReminder.logEnd' => 'Dispatched {$count} jobs to send editorial email reminders to users {$userIds} in context {$contextId}',
      'admin.scheduledTask.confirmClearLogs' => 'Are you sure you want to delete all scheduled task execution logs?',
      'admin.scheduledTask.clearLogs' => 'Clear Scheduled Task Logs',
      'admin.scheduledTask.clearLogs.description' => 'Delete all logs of scheduled tasks processes that have been run.',
      'admin.scheduledTask.clearLogs.delete' => 'Delete Task Logs',
      'admin.scheduledTask.publishSubmissions' => 'Publish submissions scheduled for publication',
      'admin.scheduledTask.reviewReminder' => 'Review reminder',
      'admin.scheduledTask.statisticsReport' => 'Editorial Report Notification',
      'admin.scheduledTask.subscriptionExpiryReminder' => 'Subscription expiry reminder',
      'admin.scheduledTask.removeUnvalidatedExpiredUsers' => 'Remove unvalidated expired users',
      'admin.scheduledTask.removeFailedJobs' => 'Remove much older failed jobs from failed job list.',
      'admin.scheduledTask.processQueueJobs' => 'Process pending queue jobs',
      'admin.scheduledTask.updateGeoDB' => 'Update DB-IP city lite database',
      'admin.scheduledTask.updateGeoDB.fileRename.error' => 'Renaming the DB-IP city lite database file {$sourceFilename} to {$targetFilename} failed.',
      'admin.scheduledTask.usageStatsLoader' => 'Usage statistics file loader task',
      'admin.scheduledTask.usageStatsLoader.processingPathNotEmpty' => 'The directory {$directory} is not empty. This could indicate a previously failed process, or a concurrently running process. This file will be automatically reprocessed.',
      'admin.scheduledTask.usageStatsLoader.openFileFailed' => 'The file {$file} could not be opened and was rejected.',
      'admin.scheduledTask.usageStatsLoader.veryOldLogFile' => 'The file {$file} is in old log file format that cannot be processed and will thus be moved back to the stage directory.',
      'admin.scheduledTask.usageStatsLoader.monthExists' => 'Skipped log file {$file} because statistics from that month have already been calculated. To recalculate statistics for a previous month, you must restore all of that month\'s log files and use the CLI tool to reprocess statistics.',
      'admin.scheduledTask.usageStatsLoader.wrongLoglineFormat' => 'The line {$lineNumber} in the log file {$file} is in the wrong format and will thus be skipped.',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry' => 'Invalid log entry at line {$lineNumber} in the log file {$file}: {$error}',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry.time' => 'Time is not a valid date.',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry.contextId' => 'Context ID is not an integer.',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry.submissionId' => 'Submission ID is not an integer.',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry.representationId' => 'Representation ID is not an integer.',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry.assocType' => 'Assoc type is not supported.',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry.fileType' => 'File type is not supported.',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry.country' => 'Country is not a two alphabetic characters string.',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry.region' => 'Region is not up to three alphanumeric characters long string.',
      'admin.scheduledTask.usageStatsLoader.invalidLogEntry.institutionIds' => 'Institution IDs is not an array.',
      'admin.scheduledTask.usageStatsLoader.insertError' => 'Error occured when processing the log file {$file} at the line {$lineNumber}: {$msg}',
      'admin.scheduledTask.usageStatsLoader.jobDispatched' => 'The background job that will process the log file {$file} and store the statistics data has been dispatched.',
      'admin.server.apacheVersion' => 'Apache version',
      'admin.server.dbDriver' => 'Database driver',
      'admin.server.dbVersion' => 'Database server version',
      'admin.serverInformation' => 'Server Information',
      'admin.server.phpVersion' => 'PHP version',
      'admin.server.platform' => 'OS platform',
      'admin.settings' => 'Settings',
      'admin.settings.about' => 'About the Site',
      'admin.settings.enableBulkEmails.label' => 'Bulk Emails',
      'admin.settings.contactEmail' => 'Email of principal contact',
      'admin.settings.contactName' => 'Name of principal contact',
      'admin.settings.introduction' => 'Introduction',
      'admin.settings.minPasswordLength' => 'Minimum password length (characters)',
      'admin.settings.restrictBulkEmails' => 'Restrict Bulk Emails',
      'admin.settings.disableBulkEmailRoles.label' => 'Disable Roles',
      'admin.settings.disableBulkEmailRoles.adminOnly' => 'Only an administrator is allowed to modify this setting.',
      'admin.settings.siteLanguage' => 'Site language',
      'admin.settings.siteStyleSheetInvalid' => 'Invalid site style sheet format. Accepted format is .css.',
      'admin.settings.siteStyleSheet' => 'Site style sheet',
      'admin.settings.siteLogo' => 'Site Logo',
      'admin.settings.siteTitle' => 'Site Name',
      'admin.settings.siteTheme' => 'Site Theme',
      'admin.siteAdmin' => 'Site Administration',
      'admin.siteManagement' => 'Site Management',
      'admin.siteSettings' => 'Site Settings',
      'admin.siteSetup' => 'Site Setup',
      'admin.systemConfigFileReadError' => 'The configuration file <tt>config.inc.php</tt> does not exist, is not readable, or is invalid.',
      'admin.systemInformation' => 'System Information',
      'admin.systemInformation.description' => 'View information about the version and configuration settings of the application and server.',
      'admin.systemInformation.view' => 'View System Information',
      'admin.versionBuild' => 'Build',
      'admin.version.checkForUpdates' => 'Check for updates',
      'admin.version.downloadPackage' => 'Download',
      'admin.version.downloadPatch' => 'Download Patch',
      'admin.versionHistory' => 'Version history',
      'admin.version.latest' => 'Latest version',
      'admin.versionMajor' => 'Major',
      'admin.versionMinor' => 'Minor',
      'admin.version.moreInfo' => 'More Information',
      'admin.versionRevision' => 'Revision',
      'admin.version.updateAvailable' => 'An updated version is available',
      'admin.version.upToDate' => 'Your system is up-to-date',
      'admin.version' => 'Version',
      'admin.fileLoader.wrongBasePathLocation' => 'Base path {$path} must be inside the public files directory.',
      'admin.fileLoader.pathNotAccessible' => 'Folder {$path} is not a directory or is not readable.',
      'admin.fileLoader.moveFileFailed' => 'File {$filename} could not be moved from {$currentFilePath} to {$destinationPath}',
      'admin.fileLoader.fileProcessed' => 'File {$filename} was processed and archived.',
      'admin.fileLoader.emailSubject' => 'File loader',
      'admin.error.gzDecompressFile.gzopen' => 'File could not be decompressed. The source gz-file {$filePath} could not be opened with gzopen.',
      'admin.error.gzDecompressFile.fopen' => 'File could not be decompressed. The destination file {$filePath} could not be opened fopen.',
      'admin.error.gzDecompressFile.gzread' => 'File could not be decompressed. The source gz-file {$file} could not be read with gzread.',
      'admin.error.gzDecompressFile.fwrite' => 'File could not be decompressed. The destination file {$filePath} could not be written with fwrite.',
      'admin.error.gzDecompressFile.fclose' => 'File could not be decompressed. The opened destination file {$filePath} could not be closed with fclose.',
      'admin.error.gzDecompressFile.gzclose' => 'File could not be decompressed. The opened source gz-file {$filePath} could not be closed with gzclose.',
      'admin.error.gzDecompressFile.unlink' => 'File could not be decompressed. The decompressed source gz-file {$filePath} could not be removed with unlink.',
      'admin.error.gzCompressFile.gzopen' => 'File could not be compressed. The destination gz-file {$filePath} could not be opened with gzopen.',
      'admin.error.gzCompressFile.fopen' => 'File could not be compressed. The source file {$filePath} could not be opened with fopen.',
      'admin.error.gzCompressFile.fread' => 'File could not be compressed. The source file {$filePath} could not be read with fread.',
      'admin.error.gzCompressFile.gzwrite' => 'File could not be compressed. The destination gz-file {$filePath} could not be written with gzwrite.',
      'admin.error.gzCompressFile.fclose' => 'File could not be compressed. The opened source file {$filePath} could not be closed with fclose.',
      'admin.error.gzCompressFile.gzclose' => 'File could not be compressed. The opened destination gz-file {$filePath} could not be closed with gzclose.',
      'admin.error.gzCompressFile.unlink' => 'File could not be compressed. The compressed source file {$filePath} could not be removed with unlink.',
      'admin.languages.noLocalesToDownload' => 'There are no locales available for download.',
      'admin.cli.tool.usage.title' => 'Usage:',
      'admin.cli.tool.usage.parameters' => 'command [arguments]',
      'admin.cli.tool.available.commands' => 'Available commands for the `{$namespace}` namespace:',
      'admin.cli.tool.jobs.maintenance.message' => 'Can not run queue jobs because the application maintenance mode is enabled.',
      'admin.cli.tool.jobs.available.options.list.description' => 'List all queued jobs. If you want to paginate results, use the parameters --page= and --perPage= . Pass flag --failed to list failed jobs.',
      'admin.cli.tool.jobs.available.options.purge.description' => 'Purge a specific queued job based on his Id. If you would like to purge all, pass the parameter --all. If you would like to purge all from a specific queue, pass the parameter --queue=',
      'admin.cli.tool.jobs.available.options.test.description' => 'Add a test job into the test queue. use the optional parameters --only= and pass \'failed\' or \'success\' to dispatch failable or successful job.',
      'admin.cli.tool.jobs.available.options.work.description' => 'Run an infinite daemon worker process that will continue to process jobs. Use --help flag to see available options associated with this command.',
      'admin.cli.tool.jobs.available.options.failed.description' => 'List all the failed jobs. Set parameter --queue=QUEUE_NAME and --connection=CONNECTION_NAME to filter the list. Also pass parameter/flag --redispatch and --clear to redispatch back to queue or clear all/specific failed jobs.',
      'admin.cli.tool.jobs.available.options.run.description' => 'Dispatch available jobs into the queue. if you would like to dispatch a job into a specific queue, pass the parameter --queue=QUEUE_NAME. Also can just pass --test to run the test job and --once to run one job at a time',
      'admin.cli.tool.jobs.available.options.run.completed.description' => 'Completed running {$jobCount} jobs in the queue named {$queueName}.',
      'admin.cli.tool.jobs.available.options.run.empty.description' => 'No jobs available to run in the queue named {$queueName}.',
      'admin.cli.tool.jobs.available.options.total.description' => 'Display the total queued jobs. Pass the flag --failed to see failed total failed jobs.',
      'admin.cli.tool.jobs.available.options.help.description' => 'Display the Jobs command usage',
      'admin.cli.tool.jobs.available.options.usage.description' => 'Display the Jobs usage parameters',
      'admin.cli.tool.jobs.empty.option' => 'Option could not be empty! Check the usage method.',
      'admin.cli.tool.jobs.queued.jobs.failed.title' => 'Failed Queued Jobs',
      'admin.cli.tool.jobs.queued.jobs.title' => 'Queued Jobs',
      'admin.cli.tool.jobs.queued.jobs.fields.id' => 'ID',
      'admin.cli.tool.jobs.queued.jobs.fields.queue' => 'Queue',
      'admin.cli.tool.jobs.queued.jobs.fields.connection' => 'Connection',
      'admin.cli.tool.jobs.queued.jobs.fields.job.display.name' => 'Job Display Name',
      'admin.cli.tool.jobs.queued.jobs.fields.attempts' => 'Attempts',
      'admin.cli.tool.jobs.queued.jobs.fields.reserved.at' => 'Reserved At',
      'admin.cli.tool.jobs.queued.jobs.fields.available.at' => 'Available At',
      'admin.cli.tool.jobs.queued.jobs.fields.created.at' => 'Created At',
      'admin.cli.tool.jobs.queued.jobs.fields.failed.at' => 'Failed At',
      'admin.cli.tool.jobs.queued.jobs.fields.exception' => 'Exception Message',
      'admin.cli.tool.jobs.pagination' => 'Pagination',
      'admin.cli.tool.jobs.pagination.current' => 'Current',
      'admin.cli.tool.jobs.pagination.previous' => 'Previous',
      'admin.cli.tool.jobs.pagination.next' => 'Next',
      'admin.cli.tool.jobs.purge.without.id' => 'You should pass at least a Job ID, \'--all\' or \'--queue=\' to use this command',
      'admin.cli.tool.jobs.test.job.failed.dispatch.message' => 'Dispatched test job that is bound to failed in queue named {$queueName}',
      'admin.cli.tool.jobs.test.job.success.dispatch.message' => 'Dispatched test job that is bound to success in queue named {$queueName}',
      'admin.cli.tool.jobs.test.invalid.option' => 'Invalid test job option. It can only take \'failed\' or \'success\' for \'--only=\' option.',
      'admin.cli.tool.jobs.purge.invalid.id' => 'Invalid job ID',
      'admin.cli.tool.jobs.purge.successful' => 'Job was deleted!',
      'admin.cli.tool.jobs.purge.impossible.to.purge.empty' => 'No jobs found to delete.',
      'admin.cli.tool.jobs.purge.impossible.to.purge.all' => 'Was impossible to delete all jobs.',
      'admin.cli.tool.jobs.purge.successful.all' => 'Deleted all jobs!',
      'admin.cli.tool.jobs.failed.clear.successful' => '{$jobsCount} failed jobs removed from failed list successfully.',
      'admin.cli.tool.jobs.failed.redispatch.successful' => '{$jobsCount} jobs redispatched successfully back to queue.',
      'admin.cli.tool.jobs.total.failed.jobs' => 'We have {$total} failed jobs',
      'admin.cli.tool.jobs.total.jobs' => 'We have {$total} queued jobs',
      'admin.cli.tool.jobs.option.doesnt.exists' => 'Option {$option} does not exist.',
      'admin.cli.tool.jobs.mean.those' => 'Did you mean one of the following?',
      'admin.jobs.totalCount' => 'There\'s a total of <strong>{$total}</strong> job(s) on the queue',
      'admin.jobs.failed.totalCount' => 'There\'s a total of <strong>{$total}</strong> failed job(s).',
      'admin.jobs.viewQueuedJobs' => 'View queued jobs',
      'navigation.tools.jobs' => 'Jobs',
      'navigation.tools.jobs.failed' => 'Failed Jobs',
      'navigation.tools.jobs.failed.details' => 'Failed Job Details',
      'navigation.tools.jobs.description' => 'View all of the queued jobs in the system and track failed attempts.',
      'navigation.tools.jobs.view' => 'View Jobs',
      'navigation.tools.jobs.failed.view' => 'View Failed Jobs',
      'navigation.tools.job.failed.details.view' => 'View Failed Job:{$id} Details',
      'admin.job.failed.list.attribute' => 'Attribute',
      'admin.job.failed.list.attribute.value' => 'Attribute Value',
      'admin.jobs.list.id' => 'ID',
      'admin.jobs.list.displayName' => 'Job',
      'admin.jobs.list.queue' => 'Queue',
      'admin.jobs.list.connection' => 'Connection',
      'admin.jobs.list.attempts' => 'Attempts',
      'admin.jobs.list.createdAt' => 'Created At',
      'admin.jobs.list.failedAt' => 'Failed At',
      'admin.jobs.list.payload' => 'Payload',
      'admin.jobs.list.exception' => 'Exception',
      'admin.jobs.list.actions' => 'Actions',
      'admin.jobs.failedAt' => 'Created at {$failedAt}',
      'admin.jobs.createdAt' => 'Created at {$createdAt}',
      'admin.jobs.failed.action.redispatch' => 'Try Again',
      'admin.jobs.failed.action.redispatch.all' => 'Requeue All Failed Jobs',
      'admin.job.compileMetrics.returnToStaging.error' => 'Job that loads the usage stats data from the file {$file} failed, and the file could not be moved from {$archivedFilePath} to {$stagingPath}.',
      'admin.job.compileMetrics.error' => 'Job that loads the usage stats data from the file {$file} failed. The file has been moved to the stage directory.',
      'admin.settings.statistics.collection' => 'Data Collection',
      'admin.settings.statistics.collection.description' => 'Configure what kind of usage statistics should be collected.',
      'admin.settings.statistics.storage' => 'Data Storage',
      'admin.settings.statistics.storage.description' => 'Configure what usage statistics should be stored on the server.',
      'admin.settings.statistics.sushi' => 'Sushi Protocol',
      'admin.settings.statistics.sushi.description' => 'Configure the <a href="https://www.projectcounter.org/counter-sushi/">COUNTER 5 SUSHI</a> protocol, an industry-recognized format for distributing usage statistics.',
      'admin.settings.statistics.keepDaily' => 'Monthly or Daily Statistics',
      'admin.settings.statistics.keepDaily.description' => 'Whether or not to track daily or monthly usage statistics. Tracking daily statistics may increase your database size considerably.',
      'admin.settings.statistics.keepDaily.keep' => 'Track daily and monthly statistics',
      'admin.settings.statistics.keepDaily.discard' => 'Only track monthly statistics',
      'admin.settings.statistics.compressStatsLogs.label' => 'Compress Logs',
      'admin.settings.statistics.compressStatsLogs.description' => 'Statistics are generated from access log files which are moved to <code>{$path}</code> once they have been processed. Should the log files be compressed into <code>.gz</code> files once they have been processed? Compressing log files may save disk space on the server.',
      'admin.settings.statistics.compressStatsLogs.default' => 'Leave the log files in place',
      'admin.settings.statistics.compressStatsLogs.compress' => 'Compress the log files',
      'admin.settings.statistics.publicSushiApi.private' => 'Restrict access to the COUNTER SUSHI statistics API to managers and admins',
      'admin.settings.statistics.sushiPlatform' => 'Platform',
      'admin.settings.statistics.sushiPlatform.description' => 'According to the COUNTER SUSHI protocol, every statistics report must identify the "platform" providing the statistics. By default, the journal will be designated as the platform for all statistics. However, if all of the journals on this site are published, owned or operated by the same provider, you may wish to designate the site as the platform.',
      'admin.settings.statistics.sushiPlatform.isSiteSushiPlatform' => 'Use the site as the platform for all journals.',
      'admin.settings.statistics.sushiPlatform.sushiPlatformID' => 'Platform ID',
      'admin.settings.statistics.sushiPlatform.sushiPlatformID.description' => 'How to identify this platform in COUNTER SUSHI reports. The platform ID must be 17 characters or less and may contain letters (a–z, A–Z), digits (0–9), underscores (_), dots (.) and forward slashes (/). The platform ID is used in several columns and should be as short as possible while remaining recognizable. The platform ID is usually based on the name of a publisher or platform, a domain name, or a well-known, unique abbreviation.',
      'admin.settings.statistics.sushiPlatform.sushiPlatformID.required' => 'A platform ID must be required when the site will be identified as the SUSHI platform.',
      'admin.cli.tool.jobs.work.options.title' => 'work command options',
      'admin.cli.tool.jobs.work.options.usage' => 'usage : [--options1 --options2= ...]',
      'admin.cli.tool.jobs.work.options.description' => 'Available options for work command',
      'admin.cli.tool.jobs.work.option.connection.description' => 'The name of the queue connection to work[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.queue.description' => 'The name of the queue to work[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.name.description' => 'The name of the worker[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.backoff.description' => 'The number of seconds to wait before retrying a job that encountered an uncaught exception[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.memory.description' => 'The memory limit in megabytes[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.timeout.description' => 'The number of seconds a child process can run[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.sleep.description' => 'Number of seconds to sleep when no job is available[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.tries.description' => 'Number of times to attempt a job before logging it failed[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.force.description' => 'Force the worker to run even in maintenance mode[default : {$default}]',
      'admin.cli.tool.jobs.work.option.stopWhenEmpty.description' => 'Stop when the queue is empty[default : {$default}]',
      'admin.cli.tool.jobs.work.option.maxJobs.description' => 'The number of jobs to process before stopping[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.maxTime.description' => 'The maximum number of seconds the worker should run[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.rest.description' => 'Number of seconds to rest between jobs[default : \'{$default}\']',
      'admin.cli.tool.jobs.work.option.test.description' => 'Run the worker deamon for test queue',
    ),
  ),
);